// RestaurantZhang
// integration @ e2bb921df88e59a63
// Working implementation, except for buses. (at this blob)

		// Create roads
		for(int i = 375; i >= 125; i -= 25) {
			CityRoad tempRoad = new CityRoad(i, 100, 25, 25, -1, 0, true, Color.black);
			CityMap.roads.add(tempRoad);
			mainFrame.cityView.addMoving(tempRoad);
		}
		for(int i = 100; i <= 300; i+=25) {
			CityRoad tempRoad = new CityRoad(100, i, 25, 25, 0, 1, false, Color.black);
			CityMap.roads.add(tempRoad);
			mainFrame.cityView.addMoving(tempRoad);
		}
		for(int i = 100; i <= 350; i+=25) {
			CityRoad tempRoad = new CityRoad(i, 325, 25, 25, 1, 0, true, Color.black);
			CityMap.roads.add(tempRoad);
			mainFrame.cityView.addMoving(tempRoad);
		}
		for(int i = 325; i >= 125; i-=25) {
			CityRoad tempRoad = new CityRoad(375, i, 25, 25, 0, -1, false, Color.black);
			CityMap.roads.add(tempRoad);
			mainFrame.cityView.addMoving(tempRoad);
		}
		for(int i = 0; i < CityMap.roads.size(); i++) { // Connect all roads
			if(i == CityMap.roads.size() - 1) {
				CityMap.roads.get(i).nextRoad = CityMap.roads.get(0);
				continue;
			}
			CityMap.roads.get(i).nextRoad = CityMap.roads.get(i+1);
		}
		
		// Create panels
		RestaurantZhangPanel rzp1 = new RestaurantZhangPanel(Color.DARK_GRAY, new Dimension(CityViewPanel.CITY_WIDTH, CityViewPanel.CITY_HEIGHT));
		CityViewRestaurant cvr1 = new CityViewRestaurant(100, 50, "Restaurant " + (mainFrame.cityView.getStaticsSize()), Color.magenta, rzp1);
		mainFrame.cityView.addStatic(cvr1);
		// Skipping creating a bank panel
		MarketPanel mp1 = new MarketPanel(Color.GRAY, new Dimension(CityViewPanel.CITY_WIDTH, CityViewPanel.CITY_HEIGHT));
		HousePanel hp1 = new HousePanel(Color.getHSBColor((float)37, (float).53, (float).529), new Dimension(CityViewPanel.CITY_WIDTH, CityViewPanel.CITY_HEIGHT));
		
		// Create buildings
		RestaurantZhangBuilding rzb1 = (RestaurantZhangBuilding) Application.CityMap.addBuilding(BUILDING.restaurant, new RestaurantZhangBuilding("RestaurantZhang", rzp1, cvr1));
		mainFrame.buildingView.addView(rzp1, cvr1.ID);
		Application.CityMap.addBuilding(BUILDING.bank, new BankBuilding("BankBuilding"));
		Application.CityMap.addBuilding(BUILDING.market, new MarketBuilding("MarketBuilding", mp1));
		// Skipping creating a house
		
		// Create tables
		rzp1.setTables(rzb1.tables);
		
		// Create bus stops
		BusStopPanel bsp1 = new BusStopPanel(Color.white, new Dimension(CityViewPanel.CITY_WIDTH, CityViewPanel.CITY_HEIGHT));
		CityViewBusStop cityViewBusStop1 = new CityViewBusStop(150, 50, "Bus Stop " + (mainFrame.cityView.getStaticsSize()), Color.white, bsp1);
		mainFrame.cityView.addStatic(cityViewBusStop1);
		BusStopBuilding busStop1 = (BusStopBuilding) Application.CityMap.addBuilding(BUILDING.busStop, new BusStopBuilding("Bus Stop 1", bsp1, cityViewBusStop1));
		mainFrame.buildingView.addView(bsp1, cityViewBusStop1.ID);
		
		BusStopPanel bsp2 = new BusStopPanel(Color.white, new Dimension(CityViewPanel.CITY_WIDTH, CityViewPanel.CITY_HEIGHT));
		CityViewBusStop cityViewBusStop2 = new CityViewBusStop(50, 300, "Bus Stop " + (mainFrame.cityView.getStaticsSize()), Color.white, bsp2);
		mainFrame.cityView.addStatic(cityViewBusStop2);
		BusStopBuilding busStop2 = (BusStopBuilding) Application.CityMap.addBuilding(BUILDING.busStop, new BusStopBuilding("Bus Stop 2", bsp2, cityViewBusStop2));
		mainFrame.buildingView.addView(bsp2, cityViewBusStop2.ID);
		
		BusStopPanel bsp3 = new BusStopPanel(Color.white, new Dimension(CityViewPanel.CITY_WIDTH, CityViewPanel.CITY_HEIGHT));
		CityViewBusStop cityViewBusStop3 = new CityViewBusStop(300, 375, "Bus Stop " + (mainFrame.cityView.getStaticsSize()), Color.white, bsp3);
		mainFrame.cityView.addStatic(cityViewBusStop3);
		BusStopBuilding busStop3 = (BusStopBuilding) Application.CityMap.addBuilding(BUILDING.busStop, new BusStopBuilding("Bus Stop 3", bsp3, cityViewBusStop3));
		mainFrame.buildingView.addView(bsp3, cityViewBusStop3.ID);
		
		BusStopPanel bsp4 = new BusStopPanel(Color.white, new Dimension(CityViewPanel.CITY_WIDTH, CityViewPanel.CITY_HEIGHT));
		CityViewBusStop cityViewBusStop4 = new CityViewBusStop(400, 150, "Bus Stop " + (mainFrame.cityView.getStaticsSize()), Color.white, bsp4);
		mainFrame.cityView.addStatic(cityViewBusStop4);
		BusStopBuilding busStop4 = (BusStopBuilding) Application.CityMap.addBuilding(BUILDING.busStop, new BusStopBuilding("Bus Stop 4", bsp4, cityViewBusStop4));
		mainFrame.buildingView.addView(bsp4, cityViewBusStop4.ID);
		
		busStop1.setNextStop(busStop2);
		busStop1.setPreviousStop(busStop4);
		busStop2.setNextStop(busStop3);
		busStop2.setPreviousStop(busStop1);
		busStop3.setNextStop(busStop4);
		busStop3.setPreviousStop(busStop2);
		busStop4.setNextStop(busStop1);
		busStop4.setPreviousStop(busStop3);
		
		// Create buses
		BusAgent bus1 = new BusAgent(busStop1, busStop2);
		BusAnimation b1Anim = new BusAnimation(bus1, busStop2);
		bus1.setAnimation(b1Anim);
		mainFrame.cityView.addAnimation(b1Anim);
		bus1.startThread();

		// Create landlord
		PersonAgent p0 = new PersonAgent("Landlord", date);
		LandlordRole p0r1 = new LandlordRole();
		p0.addRole(p0r1);
		HouseBuilding h0 = new HouseBuilding("House 0", p0r1, hp1);
		p0.setHome(h0);
		p0r1.setActive();
		people.add(p0);

		// Create houses
		HouseBuilding h1 = new HouseBuilding("House 1", p0r1, hp1);
		HouseBuilding h2 = new HouseBuilding("House 2", p0r1, hp1);
		HouseBuilding h3 = new HouseBuilding("House 3", p0r1, hp1);
		HouseBuilding h4 = new HouseBuilding("House 4", p0r1, hp1);

		// Create people
		PersonAgent p1 = new PersonAgent("Cashier 1", date);
		PersonAgent p2 = new PersonAgent("Cook 1", date);
		PersonAgent p3 = new PersonAgent("Host 1", date);
		PersonAgent p4 = new PersonAgent("Waiter 1", date);
		people.add(p1);
		people.add(p2);
		people.add(p3);
		people.add(p4);
		p1.setHome(h1);
		p2.setHome(h2);
		p3.setHome(h3);
		p4.setHome(h4);

		// Give people cars
		CarAgent c0 = new CarAgent(busStop2);
		CarAnimation c0Anim = new CarAnimation(c0, busStop2);
		c0.setAnimation(c0Anim);
		mainFrame.cityView.addAnimation(c0Anim);
		CarAgent c1 = new CarAgent(busStop2);
		CarAnimation c1Anim = new CarAnimation(c1, busStop2);
		c1 .setAnimation(c1Anim);
		mainFrame.cityView.addAnimation(c1Anim);
		CarAgent c2 = new CarAgent(busStop2);
		CarAnimation c2Anim = new CarAnimation(c2, busStop2);
		c2.setAnimation(c2Anim);
		mainFrame.cityView.addAnimation(c2Anim);
		CarAgent c3 = new CarAgent(busStop2);
		CarAnimation c3Anim = new CarAnimation(c3, busStop2);
		c3.setAnimation(c3Anim);
		mainFrame.cityView.addAnimation(c3Anim);
		CarAgent c4 = new CarAgent(busStop2);
		CarAnimation c4Anim = new CarAnimation(c4, busStop2);
		c4.setAnimation(c4Anim);
		mainFrame.cityView.addAnimation(c4Anim);
		p0.setCar(c0); // Comment out to make the landlord ride the bus
		p1.setCar(c1);
		p2.setCar(c2);
		p3.setCar(c3);
		p4.setCar(c4);

		// Create cashier
		RestaurantZhangCashierRole p1r1 = new RestaurantZhangCashierRole(rzb1, 0, 23);
		rzb1.addRole(p1r1);
		p1.setOccupation(p1r1);

		// Create cook
		RestaurantZhangCookRole p2r1 = new RestaurantZhangCookRole(rzb1, 0, 23);
		rzb1.addRole(p2r1);
		p2.setOccupation(p2r1);

		// Create host
		RestaurantZhangHostRole p3r1 = new RestaurantZhangHostRole(rzb1, 0, 23);
		rzb1.addRole(p3r1);
		p3.setOccupation(p3r1);

		// Create waiter
		RestaurantZhangWaiterSharedDataRole p4r1 = new RestaurantZhangWaiterSharedDataRole(rzb1, 0, 23);
		rzb1.addRole(p4r1);
		p4.setOccupation(p4r1);

		// Start threads
		c0.startThread();
		c1.startThread();
		c2.startThread();
		c3.startThread();
		c4.startThread();
		p0.startThread();
		p1.startThread();
		p2.startThread();
		p3.startThread();
		p4.startThread();